서브 쿼리와 메인쿼리

  메인쿼리(외부 쿼리)
#결과를 반환할 때 사용할 최종 쿼리문

  서브쿼리(내부 쿼리)
  #sql문 내부에 포함되는 괄호 안의 쿼리문이다
  #중첩SELECT문 또는 하위 SELECT문
  #외부쿼리(메인 쿼리)에 사용될 값만 처리한다
  #서브 쿼리 결과는 화면에 반환되지 않는다


  서브쿼리가 필요한 경우
  # 두개의 순차적인 쿼리를 수행하여 첫 번쨰 쿼리 결과를 두번쨰 쿼리의 검색 값으로 사용하는 경우와 
  동일한 작업을 하나의 SQL에서 실행함

  
  SQL문에서 서브쿼리가 사용될수 있는 경우는 다음과 같다

  # WHERE절
  # HAVING절
  # FROM절   ==인라인 뷰== (아래 참고)
  # ORDER BY절

  서브 쿼리의 구문
  #서브 쿼리는 괄호로 묶어야 하며 일반적으로 비교조건의 오른쪽에 위치한다
  #한개의 메인 쿼리에 여러개의 서브 쿼리가 존재 가능함

  아래는 서브 쿼리의 구문 예시이다

  #구문예시
      SELECT select_list
      FROM table
      WHERE 표현식  비교연산자 (SELECT select_list
                                FROM table);

예제

  #오상우 사원보다 급여를 많이 받는 직원의 이름과 직위 급여를 표시하시오.

  SELECT emp_name, position,salary
  FROM y_emp
  WHERE salary > (SELECT salary FROM y_emp
                  WHERE emp_name = '오상우');

서브 쿼리의 종류

  @반환되는 행의 수 기준
  #단일 행 서브쿼리
  #다중 행 서브쿼리

  @다중 열 서브쿼리

  @*인라인 뷰*(중요)
  #FROM 절에 사용된 서브 쿼리이다

  @스칼라 서브쿼리
  (pdf참조)

  @상호관련 서브쿼리
  #메인쿼리와 서브쿼리의 특정 열 값을 상호 비교한다



 1 단일행 서브 쿼리와 다중 행 서브쿼리
  #서브쿼리로부터 단일 행을 반환: 단일 행 서브 쿼리
  #서브쿼리로부터 여러 행을 반환: 다중 행 서브 쿼리
    
  @서브쿼리에서 사용될 비교연산자를 구분하여 사용한다
    #단일 행 연산자는(>,=,>=,<,<>,<=)
    #다중 행 연산자(IN,ANY,ALL)


단일 행 서브 쿼리의 예제

  #1049번 사원과 직급이 동일한 사원을 표시
    SELECT emp_name,position
    FROM y_emp
    WHERE position = (SELECCT position
                      FROM y_emp
                      WHERE emp_id = 1049);

  #1044번과 업무가 동일하면서 1050번 사원보다 급여를 많이 받는 사원을 반환
    SElECCT emp_name, position, salary
    FROM Y_emp
    WHERE position = (SELECT position FROM y_emp
                      WHERE emp_id = 1044)
    AND salary > (SELECT salary FROM Y_emp
                  WHERE emp_id = 1050);

  #다음은 HAVING절에 서브쿼리를 사용하여 회사의 업무 중 평균 급여가 가장 낮은
   직급과 그 평균 급여를 반환한다
    SELECT position, AVG(salary)
    FROM y_emp
    GROUP BY position
    HAVING AVG(salary) = (SELECT MIN(AV(salary))
                          FROM y_emp
                          GROUP BY position);



    
      
   

    

    

  


  
  
  
  
  
  
