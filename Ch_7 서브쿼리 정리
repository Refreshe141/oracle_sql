서브 쿼리와 메인쿼리

  메인쿼리(외부 쿼리)
#결과를 반환할 때 사용할 최종 쿼리문

  서브쿼리(내부 쿼리)
  #sql문 내부에 포함되는 괄호 안의 쿼리문이다
  #중첩SELECT문 또는 하위 SELECT문
  #외부쿼리(메인 쿼리)에 사용될 값만 처리한다
  #서브 쿼리 결과는 화면에 반환되지 않는다


  서브쿼리가 필요한 경우
  # 두개의 순차적인 쿼리를 수행하여 첫 번쨰 쿼리 결과를 두번쨰 쿼리의 검색 값으로 사용하는 경우와 
  동일한 작업을 하나의 SQL에서 실행함

  
  SQL문에서 서브쿼리가 사용될수 있는 경우는 다음과 같다

  # WHERE절
  # HAVING절
  # FROM절   ==인라인 뷰== (아래 참고)
  # ORDER BY절

  서브 쿼리의 구문
  #서브 쿼리는 괄호로 묶어야 하며 일반적으로 비교조건의 오른쪽에 위치한다
  #한개의 메인 쿼리에 여러개의 서브 쿼리가 존재 가능함

  아래는 서브 쿼리의 구문 예시이다

  #구문예시
      SELECT select_list
      FROM table
      WHERE 표현식  비교연산자 (SELECT select_list
                                FROM table);

예제

  #오상우 사원보다 급여를 많이 받는 직원의 이름과 직위 급여를 표시하시오.

  SELECT emp_name, position,salary
  FROM y_emp
  WHERE salary > (SELECT salary FROM y_emp
                  WHERE emp_name = '오상우');

서브 쿼리의 종류

  @반환되는 행의 수 기준
  #단일 행 서브쿼리
  #다중 행 서브쿼리

  @다중 열 서브쿼리

  @*인라인 뷰*(중요)
  #FROM 절에 사용된 서브 쿼리이다

  @스칼라 서브쿼리
  (pdf참조)

  @상호관련 서브쿼리
  #메인쿼리와 서브쿼리의 특정 열 값을 상호 비교한다



 1 단일행 서브 쿼리와 다중 행 서브쿼리
  #서브쿼리로부터 단일 행을 반환: 단일 행 서브 쿼리
  #서브쿼리로부터 여러 행을 반환: 다중 행 서브 쿼리
    
  @서브쿼리에서 사용될 비교연산자를 구분하여 사용한다
    #단일 행 연산자는(>,=,>=,<,<>,<=)
    #다중 행 연산자(IN,ANY,ALL)


단일 행 서브 쿼리의 예제

  #1049번 사원과 직급이 동일한 사원을 표시
    SELECT emp_name,position
    FROM y_emp
    WHERE position = (SELECCT position
                      FROM y_emp
                      WHERE emp_id = 1049);

  #1044번과 업무가 동일하면서 1050번 사원보다 급여를 많이 받는 사원을 반환
    SElECCT emp_name, position, salary
    FROM Y_emp
    WHERE position = (SELECT position FROM y_emp
                      WHERE emp_id = 1044)
    AND salary > (SELECT salary FROM Y_emp
                  WHERE emp_id = 1050);

  #다음은 HAVING절에 서브쿼리를 사용하여 회사의 업무 중 평균 급여가 가장 낮은
   직급과 그 평균 급여를 반환한다
    SELECT position, AVG(salary)
    FROM y_emp
    GROUP BY position
    HAVING AVG(salary) = (SELECT MIN(AV(salary))
                          FROM y_emp
                          GROUP BY position);


서브 쿼리에서 발생할 수 있는 문제

@연산자의 잘못된 사용
  #단일 행 비교연산자를 사용하면서 서브 쿼리에는 여러 행을 반환하는 경우
  #쿼리의 구조를 변경하거나 연산자의 종류 변경


서브 쿼리를 잘못 사용하여 발생한 문제의 예시

  #다음은 직급이 차장인 사원과 급여가 같은 사원을 찾는 문장이다 서브쿼리가 여러 행을 반환하여
   다일행 서브쿼리인 매인쿼리가 오류를 반환하는 문장이다
   SELECT emp_id, emp_name, position,salary
   FROM y_emp
   WHERE salary = (SELECT salary FROM y_emp
                   WHERE position='차장');

  ( WHERE salary = (SELECT salary FROM y_emp
                   *) 잘못된 부분


  다중 행 서브쿼리
  #여러 행을 반환하는 서브 쿼리

  #여러 값을 처리하는 다중 행 연산자를 사용한다

  @다중 행 연산자의 종류
   #IN : 목록의 임의의 값과 동등 비교
   #ANY : 값을 서브 쿼리에 의해 반환된 (각) 값과 비교
   #ALL : 값을 서브 쿼리에 의해 반환된 (모든) 값과 비교 



 다중 행 서브쿼리의 예제


  #다음은 200번 이하의 부서에 대하여 각 부서의 최고급여를 구한 후 그 급여와 동일한 급여를 받는
   사원 정보를 반환한다
   SELECT emp_name, salary, dept_id
   FROM y_emp
   WHERE  salary IN (SELECT MAX(salary)
                     FROM y_emp
                     WHERE dept_id <= 200
                     GROUP BY dept_id );


  #다은은 직책이 대리가 아니면서 급여가 임의의 대리인 사원보다 낮은 사원을 표시한다.
  #아래의 예제에선 연산자의 종류를 >ANY,ALL,<ALL로 변경하여 각각의 결과를 표시하고 비교한다
   SELECT emp_id, emp_name, position, salary
   FROM y_emp
   WHERE salary < ANY
                   (SELECT salary FROM y_emp
                    WHERE position = '대리')
   AND  position <> '대리';



다중 열 서브쿼리


@다중 열 서브쿼리의 개념

 #서브쿼리에서 반환되는 데이터가 두 개 이상의 열을 반환한다면 다중 열 서브 쿼리를 사용한다

 #1 두개 이상의 열을 비교하는 경우
 # 논리 연산자를 사용하여 혼합 WHERE 절을 작성
 # 중복된 WHERE 조건을 하나의 WHERE 절로 결합

 #2다중열 서브 쿼리에서 열의 비교 방식
 #쌍 비교 방식
 #비쌍 비교 방식 



다중 열 서브 쿼리의 쌍 비교

 #서브쿼리에서 여러 개의 행을 여러 개의 열과 함께 반환한다
 #비교할 열 들을 괄호로 묶어서 동시에 비교하는 방식
 #비교 연산자 좌우의 열의 수가 같아야 한다
 #출력되는 결과는 두 열의 값이 동시에 일치하는 행들

다중 열 서브 쿼리의 비쌍 비교

 #둘 이상의 열의 비교에 서브 쿼리를 별도로 작성하여 각 열을 따로 비교하는 방식
 #서브 쿼리의 개수가 비교 되는 열 수만큼 AND 사용


쌍과 비쌍 비교 방식의 예제

#다음 예제는(쌍) 비교 방식으로 성이 차씨인 사원들과 직급 및 부서가 동일한 사원의 정보를 반환한다
 SELECT emp_id, emp_name, position, dept_id
 FROM y_emp
 WHERE (position, dept_id) IN (SELECT position,dept_id FROM y_emp
                               WHERE emp_name LIKE '차%')
                               AND emp_name NOT LIKE '차%';


#다음은 비쌍 비교 방식을 통하여 성이 차씨인 사원들의 직급,부서 번호와 직급 및 부서 번호가 동일한 
 사원의 정보를 반환한다
 SELECT emp_id, emp_name, position, dept_id
 FROM y_emp
 WHERE position IN (SELECT position FROM y_emp
                    WHERE emp_name LIKE '차%')
 AND dept_id IN (SELECT dept_id FROM y_emp
                 WHERE emp_name LIKE '차%')
 AND emp_name NOT LIKE '차%'



상호 관련 서브 쿼리

   #메인 쿼리와 서브쿼리가 서로 연관되어 실행되는SQL이다
   #서브 쿼리가 메인 쿼리에서 사용하는 테이블의 열을 참조할 때 상호관련 서브쿼리를 수행
   #상호관련 서브 쿼리는 메인 쿼리에서 처리되는 각 행에 대해 한 번씩 평가
   #상호관련 서브쿼리는 메인 쿼리의 모든 행에 대해 한 번씩 실행한다





    

  








    
      
   

    

    

  


  
  
  
  
  
  
